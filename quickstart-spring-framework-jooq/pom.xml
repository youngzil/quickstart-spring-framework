<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<parent>
		<groupId>org.quickstart</groupId>
		<artifactId>quickstart-spring-framework</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>..</relativePath> <!-- lookup parent from repository -->
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>quickstart-spring-framework-jooq</artifactId>
	<packaging>jar</packaging>
	<name>${project.artifactId}-${project.version}</name>
	<url>http://maven.apache.org</url>
	<description>Demo project for Spring</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<spring.version>5.1.2.RELEASE</spring.version>
		<spring.version>4.3.20.RELEASE</spring.version>

		<jooq.version>3.11.7</jooq.version>
		<h2.version>2.1.210</h2.version>

		<slf4j.version>1.7.25</slf4j.version>

	</properties>


	<dependencies>

		<!-- Database access -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Spring (transitive dependencies are not listed explicitly) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<!-- The resources element will replace available properties in all matching resources. We use this to provide H2 connection configuration to various configuration elements -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<fork>true</fork>
					<maxmem>1024m</maxmem>
					<meminitial>256m</meminitial>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
					<!-- [#2413] Make compiler warnings a bit more visible But don't fail (yet) -->
					<compilerArgs>
						<arg>-Xlint:varargs</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- We're using the properties plugin to load external properties into Maven. See this excellent blog post for an explanation: http://www.petrikainulainen.net/programming/tips-and-tricks/creating-profile-specific-configuration-files-with-maven/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/config.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- The H2 test schema is loaded here -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>
					<skip>${maven.test.skip}</skip>
					<forkMode>always</forkMode>
				</configuration>
				<executions>
					<execution>
						<id>create-database-h2</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${db.driver}</driver>
							<url>${db.url}</url>
							<username>${db.username}</username>
							<password>${db.password}</password>

							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/db-h2.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${h2.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- The jOOQ code generator plugin -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>
						<id>generate-h2</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<jdbc>
								<driver>${db.driver}</driver>
								<url>${db.url}</url>
								<user>${db.username}</user>
								<password>${db.password}</password>
							</jdbc>
							<generator>
								<database>
									<inputSchema>PUBLIC</inputSchema>
								</database>
								<generate>
									<instanceFields>true</instanceFields>
									<pojos>true</pojos>
									<daos>true</daos>
									<springAnnotations>true</springAnnotations>
								</generate>
								<target>
									<packageName>org.jooq.example.db.h2</packageName>
									<directory>target/generated-sources/jooq-h2</directory>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
